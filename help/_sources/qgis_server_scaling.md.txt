# QGIS Server Scaling

If your server has the needed resources, you can dramatically improve response times for concurrent
QGIS server requests by scaling the QGIS server:

```
docker-compose --profile=production up -d --scale qgis-server=10 --remove-orphans

```

To take advantage of this, the locations/upstreams/qgis-server.conf should have one 
server reference per instance e.g.

```
    upstream qgis-fcgi {
        # When not using 'host' network these must reflect the number
        # of containers spawned by docker-compose and must also have
        # names generated by it (including the name of the stack)
        server osgisstack_qgis-server_1:9993;
        server osgisstack_qgis-server_2:9993;
        server osgisstack_qgis-server_3:9993;
        server osgisstack_qgis-server_4:9993;
        server osgisstack_qgis-server_5:9993;
        server osgisstack_qgis-server_6:9993;
        server osgisstack_qgis-server_7:9993;
        server osgisstack_qgis-server_8:9993;
        server osgisstack_qgis-server_9:9993;
        server osgisstack_qgis-server_10:9993;
    }
```

Then restart Nginx too:

```
docker-compose --profile=production restart nginx

```

Note that if you do an Nginx up it may bring down your scaled QGIS containers so take care.

Finally check the logs of Nginx to make sure things are running right:

```
docker-compose --profile=production logs nginx
```


