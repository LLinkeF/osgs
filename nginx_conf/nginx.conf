# -*- coding: utf-8 -*-
# vim: tabstop=4 shiftwidth=4 softtabstop=4
#
# oq-qgis-server
# Copyright (C) 2018-2019 GEM Foundation
#
# oq-qgis-server is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# oq-qgis-server is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

user nginx;
worker_processes auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;



events {
    worker_connections  1024;
}


http {
    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;
    types_hash_bucket_size 64;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    upstream qgis-fcgi {
        # When not using 'host' network these must reflect the number
        # of containers spawned by docker-compose and must also have
        # names generated by it (including the name of the stack)
        server maceiramergindbsync_qgis-server_1:9993;
        #server oq-qgis-server_qgis-server_2:9993;
        #server oq-qgis-server_qgis-server_3:9993;
    }

    # Get 'host' from `$host` unless 'X-Forwarded-Host'
    # is set by the reverse proxy.
    # 'X-Forwarded-Host' may contain also the port,
    # so it is removed from the variable
    map $http_x_forwarded_host $qgis_host {
        "~(?<h>[^:]+)" $h;
        default $host;
    }
    # Get 'PORT' from `$http_host`
    map $http_host $port {
        "~*.*:(?<p>.*)" $p;
        default $server_port;
    }
    # Get 'HTTPS' status from `$https` unless 'X-Forwarded-Proto'
    # is set by the reverse proxy and contains 'https' scheme
    map $http_x_forwarded_proto $qgis_ssl {
        "https" "on";
        default $https;
    }
    # Get 'PORT' from `$port` unless 'X-Forwarded-Port'
    # is set by the reverse proxy
    map $http_x_forwarded_port $qgis_port {
        "" $port;
        default $http_x_forwarded_port;
    }

    server {
        listen 80;
        server_name castelo.kartoza.com;
        location / {
            return 301 https://$host$request_uri;
        }    
    } 

    server {
        listen 443 ssl default_server;
        server_name castelo.kartoza.com;
        # server_name  _;
        listen       [::]:443 default_server;
        root         /usr/share/nginx/html;
        
        # Next 4 lines based on https://medium.com/@pentacent/nginx-and-lets-encrypt-with-docker-in-less-than-5-minutes-b4b8a60d3a71
        # You should use your own domain for the path in the next two lines
        ssl_certificate /etc/letsencrypt/live/castelo.kartoza.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/castelo.kartoza.com/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;


        # Added by Tim for certbot
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        location / {
            root /var/www/html;
        }
        # Normal ogc service mapping for file based projects
        # Data dir structure
        # $(pwd)/data must have the following structure:
        # data
        # |
        # |-- <project_name>
        # |-- <project_name>.qgs
        location /ogc/ {
            rewrite ^/ogc/(.*)$ /qgis/qgis_mapserv.fcgi?map=/io/data/$1/$1.qgz;
        }
        # This section is only used when redirecting from /ogc file based 
        # project requests
        location /qgis/ {
            internal; # Used only by the OGC rewrite
            root /var/www/data;
            fastcgi_pass  qgis-fcgi;

            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param QUERY_STRING    $query_string;
            # build links in GetCapabilities based on
            # the hostname exposed by the reverse proxy
            fastcgi_param  HTTPS $qgis_ssl;
            fastcgi_param  SERVER_NAME $qgis_host;
            fastcgi_param  SERVER_PORT $qgis_port;

            include fastcgi_params;
        }



        # For PG projects as we want all requests to come via 
        # the /map call which will then append the pg project connection details
        location /map/ {
            # A little rewrite in the style of https://github.com/qgis/QGIS/issues/31192
            rewrite ^/map/$ /qgis-pg/qgis_mapserv.fcgi;
        }
        # I couldnt get nginx to share the common fastcgi params
        # between qgis and qgis-pg so I shamelessly copied these
        # This section is only used when redirecting from /map postgis 
        # project requests
        location /qgis-pg/ {
            internal; # Used only by the OGC rewrite
            root /var/www/data;
            fastcgi_pass  qgis-fcgi;

            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param QUERY_STRING    $query_string;
            # build links in GetCapabilities based on
            # the hostname exposed by the reverse proxy
            fastcgi_param  HTTPS $qgis_ssl;
            fastcgi_param  SERVER_NAME $qgis_host;
            fastcgi_param  SERVER_PORT $qgis_port;
            # We redirect to a database connection with shamelessly hardcoded 
            # credentials which should never be seen on the url
            # For pg project path syntax, see https://docs.qgis.org/3.16/en/docs/server_manual/config.html#environment-variables
            # We use a different service definition to the one used by the QGIS project
            # because the rest of the authentication is managed by QGIS authdb
            fastcgi_param  QGIS_PROJECT_FILE postgresql://?service=nginx&sslmode=disable&schema=public&project=smallholding;
            include fastcgi_params;
        }
        location /mapproxy {
            proxy_pass http://mapproxy/mapproxy;
            proxy_set_header    Host            $host;
            proxy_set_header    X-Real-IP       $remote_addr;
            proxy_set_header    X-Forwarded-for $remote_addr;
            port_in_redirect off;
            proxy_connect_timeout 600;
            proxy_set_header X-Script-Name /mapproxy;
        }
        error_page 404 /404.html;
            location = /40x.html {
        }
        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    }

}

